service: reddit

provider:
    name: aws
    runtime: nodejs6.10
    timeout: 30
    versionFunctions: false
    environment: ${file(environment.js):environment}
    iamRoleStatements:
        - Effect: "Allow"
          Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
          Resource: arn:aws:dynamodb:*:*:table/feeds-${self:provider.stage}
        - Effect: "Allow"
          Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:Scan
          Resource: arn:aws:dynamodb:*:*:table/dota-players-${self:provider.stage}
        - Effect: "Allow"
          Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:Scan
          Resource: arn:aws:dynamodb:*:*:table/fortnite
        - Effect: "Allow"
          Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:Scan
          Resource: arn:aws:dynamodb:*:*:table/pubg

functions:
    redditFeed:
        environment:
            table: feeds-${self:provider.stage}
        handler: handler.redditFeed
        events:
            - schedule: rate(5 minutes)
    dotaBlog:
        environment:
            table: feeds-${self:provider.stage}
        handler: handler.dotaBlog
        events:
            - schedule: rate(5 minutes)
    pokemongoUpdates:
        environment:
            table: feeds-${self:provider.stage}
        handler: handler.pokemongoUpdates
        events:
            - schedule: rate(30 minutes)
    twitchStreams:
        environment:
            table: feeds-${self:provider.stage}
        handler: handler.twitchStreams
        events:
            - schedule: rate(5 minutes)
    arkChangelog:
        environment:
            table: feeds-${self:provider.stage}
        handler: handler.arkChangelog
        events:
            - schedule: rate(30 minutes)
    dotaMatches:
        environment:
            table: dota-players-${self:provider.stage}
        handler: handler.dotaMatches
    openDotaMatches:
        environment:
            table: dota-players-${self:provider.stage}
        handler: handler.openDotaMatches
        events:
            - schedule: rate(10 minutes)
    dotaUpdates:
        environment:
            table: feeds-${self:provider.stage}
        handler: handler.dotaUpdates
        events:
            - schedule: rate(5 minutes)
    steamUpdates:
        environment:
            table: feeds-${self:provider.stage}
        handler: handler.steamUpdates
        events:
            - schedule: rate(5 minutes)
    fortniteMatches:
        environment:
            table: fortnite
        handler: handler.fortniteMatches
        events:
            - schedule: rate(5 minutes)
    fortniteChangelog:
        environment:
            table: feeds-${self:provider.stage}
        handler: handler.fortniteChangelog
        events:
            - schedule: rate(30 minutes)
    pubgMatches:
        environment:
            table: pubg
        handler: handler.pubgMatches
        timeout: 300
        events:
            - schedule: rate(5 minutes)
    embedTest:
        handler: handler.embedTest

resources:
    Resources:
        FeedsTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: feeds-${self:provider.stage}
                AttributeDefinitions:
                    - AttributeName: name
                      AttributeType: S
                KeySchema:
                    - AttributeName: name
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 5
                    WriteCapacityUnits: 5
        DotaPlayersTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: dota-players-${self:provider.stage}
                AttributeDefinitions:
                    - AttributeName: steamID
                      AttributeType: S
                KeySchema:
                    - AttributeName: steamID
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 5
                    WriteCapacityUnits: 5
        FortniteTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: fortnite
                AttributeDefinitions:
                    - AttributeName: name
                      AttributeType: S
                KeySchema:
                    - AttributeName: name
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 5
                    WriteCapacityUnits: 5
        PubgTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: pubg
                AttributeDefinitions:
                    - AttributeName: id
                      AttributeType: S
                KeySchema:
                    - AttributeName: id
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 5
                    WriteCapacityUnits: 5
